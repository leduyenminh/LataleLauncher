spring.datasource.url=jdbc:mariadb://localhost:3306/latale?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.orm.jdbc.bind=TRACE
# Let Spring Boot initialize schema.sql & data.sql
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.jpa.properties.hibernate.generate_statistics=true
# Lazy loading and N+1 problem mitigation
spring.jpa.properties.hibernate.default_batch_fetch_size=10

# Second-level cache
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.internal.JCacheRegionFactory
hibernate.cache.provider_configuration_file_resource_path=classpath:ehcache.xml

# Query cache
spring.jpa.properties.hibernate.cache.use_query_cache=true

# Batch processing
spring.jpa.properties.hibernate.jdbc.batch_size=30
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# SQL script to initialize database with some data
#spring.sql.init.data-locations=classpath:data.sql
# DB_TYPE=mariaDB

#Spring Security
logging.level.org.springframework.security=TRACE

# Redis properties
spring.redis.host=redis
spring.redis.port=6379
spring.cache.type=redis

# Kafka properties
spring.kafka.bootstrap-servers=kafka-0.kafka:9092,kafka-1.kafka:9092,kafka-2.kafka:9092
spring.kafka.consumer.group-id=latale
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=-1
spring.kafka.producer.retries=1
#prevent duplicate send
spring.kafka.producer.properties.[enable.idempotence]=true
#Secure properties
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-512
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
    username="appuser" \
    password="apppassword";
spring.kafka.properties.ssl.truststore.location=/etc/ssl/certs/kafka.truststore.jks
spring.kafka.properties.ssl.truststore.password=truststore-pass
spring.kafka.properties.ssl.keystore.location=/etc/ssl/certs/kafka.keystore.jks
spring.kafka.properties.ssl.keystore.password=keystore-pass
spring.kafka.properties.ssl.key.password=key-pass

#lIQUIBASE
spring.liquibase.change-log=classpath:liquidbase/lataleMigration.xml
liquibase.sql.logLevel: FINE

#JWT 
jwt.secret=MySuperSecureJwtSecretKeyForHS256_123456


